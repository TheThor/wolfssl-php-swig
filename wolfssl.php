<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('wolfssl')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_wolfssl.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('wolfssl.so')) return;
    } else {
      if (!dl('wolfssl.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class wolfssl {
	static function wolfTLSv1_2_client_method() {
		return wolfTLSv1_2_client_method();
	}

	static function wolfSSLv23_server_method() {
		return wolfSSLv23_server_method();
	}

	static function wolfSSL_CTX_new($arg1) {
		return wolfSSL_CTX_new($arg1);
	}

	static function wolfSSL_CTX_load_verify_locations($arg1,$arg2,$arg3) {
		return wolfSSL_CTX_load_verify_locations($arg1,$arg2,$arg3);
	}

	static function wolfSSL_new($arg1) {
		return wolfSSL_new($arg1);
	}

	static function wolfSSL_get_error($arg1,$arg2) {
		return wolfSSL_get_error($arg1,$arg2);
	}

	static function wolfSSL_write($arg1,$arg2,$arg3) {
		return wolfSSL_write($arg1,$arg2,$arg3);
	}

	static function wolfSSL_Debugging_ON() {
		return wolfSSL_Debugging_ON();
	}

	static function wolfSSL_Init() {
		return wolfSSL_Init();
	}

	static function wolfSSL_use_certificate_buffer($ssl,$in,$sz,$format) {
		return wolfSSL_use_certificate_buffer($ssl,$in,$sz,$format);
	}

	static function wolfSSL_use_PrivateKey_buffer($ssl,$in,$sz,$format) {
		return wolfSSL_use_PrivateKey_buffer($ssl,$in,$sz,$format);
	}

	static function ProcessBuffer($ctx,$buff,$sz,$format,$type,$ssl,$used,$userChain,$verify) {
		return ProcessBuffer($ctx,$buff,$sz,$format,$type,$ssl,$used,$userChain,$verify);
	}

	static function wc_SignatureGenerate($hash_type,$sig_type,$data,$data_len,$sig,$sig_len,$key,$key_len,$rng) {
		return wc_SignatureGenerate($hash_type,$sig_type,$data,$data_len,$sig,$sig_len,$key,$key_len,$rng);
	}

	static function wc_PKCS12_PBKDF($output,$passwd,$pLen,$salt,$sLen,$iterations,$kLen,$hashType,$purpose) {
		return wc_PKCS12_PBKDF($output,$passwd,$pLen,$salt,$sLen,$iterations,$kLen,$hashType,$purpose);
	}

	static function wc_RsaSSL_Sign($in,$inLen,$out,$outLen,$key,$rng) {
		return wc_RsaSSL_Sign($in,$inLen,$out,$outLen,$key,$rng);
	}

	static function wc_RsaSSL_Verify($in,$inLen,$out,$outLen,$key) {
		return wc_RsaSSL_Verify($in,$inLen,$out,$outLen,$key);
	}
}

/* PHP Proxy Classes */

